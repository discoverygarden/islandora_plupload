<?php

/**
 * @file
 * Inserts plupload file upload elements into Islandora forms.
 */

/**
 * Implements hook_menu().
 */
function islandora_plupload_menu() {
  $items = array();
  $items['admin/islandora/plupload'] = array(
    'title' => 'Plupload',
    'access arguments' => array('administer islandora plupload'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_plupload_admin_form'),
    'file' => 'includes/admin.form.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function islandora_plupload_permission() {
  return array(
    'administer islandora plupload' => array(
      'title' => t('Administer Islandora Plupload'),
    ),
  );
}

/**
 * Implements hook_form_alter().
 */
function islandora_plupload_form_alter(&$form, &$form_state, $form_id) {
  if (strpos($form_id, 'islandora') !== FALSE) {
    islandora_plupload_alter_managed_files($form);
  }
}

/**
 * Recursively change managed_file elements to plupload.
 *
 * @param array $form
 *   A form or element array.
 */
function islandora_plupload_alter_managed_files(&$form) {
  $islandora_plupload_max = variable_get('islandora_plupload_max_filesize', 3000);
  if (is_array($form) && !empty($form)) {
    foreach ($form as &$element) {
      // There must be a better way to get the children.
      if (isset($element['#type']) && $element['#type'] === 'fieldset') {
        $children = element_children($element);
        if (is_array($children) && (count($children) > 0)) {
          foreach ($children as $key) {
            islandora_plupload_alter_managed_files($form[$key]);
          }
        }
      }
      if (isset($element['#type']) && $element['#type'] === 'managed_file') {
        $element['#type'] = 'plupload';
        unset($element['#description']);
        $element['#upload_validators']['file_validate_size'] = array($islandora_plupload_max * 1024 * 1024);
        $settings = array(
          'max_file_size' => $islandora_plupload_max . 'MB',
          'chunk_size' => variable_get('islandora_plupload_chunk_size', 15) . 'MB',
        );
        $element['#plupload_settings'] = $settings;
        $element['#submit_element'] = '#edit-next';
        $element['#element_validate'][] = 'islandora_plupload_element_validate';
      }
    }
  }
}

/**
 * Plupload element validation. Format the value as a managed_file would be.
 *
 * @TODO: handle form_state values where tree is TRUE (no Islandora cases yet)
 *
 * @param array $element
 *   The form element.
 * @param array $form_state
 *   The form state.
 */
function islandora_plupload_element_validate($element, &$form_state) {
  module_load_include('inc', 'islandora', 'includes/mime_detect');
  if (isset($element['#type']) && $element['#type'] == 'plupload' && isset($form_state['values'][$element['#name']][0]) && is_array($form_state['values'][$element['#name']][0])) {
    $file = plupload_file_uri_to_object($form_state['values'][$element['#name']][0]["tmppath"]);
    $file->filename = $form_state['values'][$element['#name']][0]['name'];
    $mime_detect = new MimeDetect();
    $file->filemime = $mime_detect->getMimeType($file->filename);
    islandora_plupload_file_save($file);
    $form_state['values'][$element['#name']] = $file->fid;
  }
  elseif (isset($element['#type']) && $element['#type'] == 'plupload' && !is_numeric($form_state['values'][$element['#name']])) {
    $form_state['values'][$element['#name']] = 0;
  }
}

/**
 * Copy of Drupal file_save that buries errors using filesize() on files > 2GB.
 */
function islandora_plupload_file_save($file) {
  $file->timestamp = REQUEST_TIME;
  if (!isset($file->filesize)) {
    $file->filesize = @filesize($file->uri);
  }
  module_invoke_all('file_presave', $file);
  module_invoke_all('entity_presave', $file, 'file');

  if (empty($file->fid)) {
    drupal_write_record('file_managed', $file);
    // Inform modules about the newly added file.
    module_invoke_all('file_insert', $file);
    module_invoke_all('entity_insert', $file, 'file');
  }

  unset($file->original);
  return $file;
}
